//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/DEMO/Script/Input/GameInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputAction"",
    ""maps"": [
        {
            ""name"": ""GameInput"",
            ""id"": ""0dc5d072-7529-4699-b2da-00b8bcd1570c"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""ff65736c-8128-4f33-92d8-2c1f1efb9791"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraLook"",
                    ""type"": ""Value"",
                    ""id"": ""6a524b01-9115-4c70-ba13-f0242449d204"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""b9ae8f6b-e516-4fb1-b5d6-a4877c2aaaef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LAttack"",
                    ""type"": ""Button"",
                    ""id"": ""df2e1745-c8c2-464c-ba69-dd90d6280017"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RAttack"",
                    ""type"": ""Button"",
                    ""id"": ""40571607-834c-4c74-90d0-604ad5ed3a56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Climb"",
                    ""type"": ""Button"",
                    ""id"": ""bc0406cf-a9b3-4bdf-aa87-81f4b5efe702"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grab"",
                    ""type"": ""Button"",
                    ""id"": ""91fa4585-5f58-45b2-9a1a-2cde26a91d10"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TakeOut"",
                    ""type"": ""Button"",
                    ""id"": ""987b91ff-b207-4581-a9df-04b92088d68a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""cdfaa99a-8f58-48d0-a311-1d38df922e43"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""22a9bc43-8a06-45e4-bb17-debc234ebac7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""58690f02-eef2-40e7-b442-1ace44cb273c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""03f2450a-822f-4484-b667-0c05d9b50fdd"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3533e781-d5e9-400c-93c6-1086cc4287f0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""034d6d95-1239-489c-81f3-00e45b3f2318"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.15,y=0.15)"",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96306270-58bd-46f9-96d6-a91ffe653b5b"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd4c4340-8930-4102-90f2-9a7365093c39"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""193b3154-70ca-4929-be2e-031e71b083d3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7659288-4d16-4f85-93e1-6829442c6221"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Climb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59ecbf80-8d92-497c-bc33-2cb2f7db2aa4"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1f485e0-cc8f-40e2-95a1-aacb06725ef1"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TakeOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GameInput
        m_GameInput = asset.FindActionMap("GameInput", throwIfNotFound: true);
        m_GameInput_Movement = m_GameInput.FindAction("Movement", throwIfNotFound: true);
        m_GameInput_CameraLook = m_GameInput.FindAction("CameraLook", throwIfNotFound: true);
        m_GameInput_Run = m_GameInput.FindAction("Run", throwIfNotFound: true);
        m_GameInput_LAttack = m_GameInput.FindAction("LAttack", throwIfNotFound: true);
        m_GameInput_RAttack = m_GameInput.FindAction("RAttack", throwIfNotFound: true);
        m_GameInput_Climb = m_GameInput.FindAction("Climb", throwIfNotFound: true);
        m_GameInput_Grab = m_GameInput.FindAction("Grab", throwIfNotFound: true);
        m_GameInput_TakeOut = m_GameInput.FindAction("TakeOut", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GameInput
    private readonly InputActionMap m_GameInput;
    private IGameInputActions m_GameInputActionsCallbackInterface;
    private readonly InputAction m_GameInput_Movement;
    private readonly InputAction m_GameInput_CameraLook;
    private readonly InputAction m_GameInput_Run;
    private readonly InputAction m_GameInput_LAttack;
    private readonly InputAction m_GameInput_RAttack;
    private readonly InputAction m_GameInput_Climb;
    private readonly InputAction m_GameInput_Grab;
    private readonly InputAction m_GameInput_TakeOut;
    public struct GameInputActions
    {
        private @GameInputAction m_Wrapper;
        public GameInputActions(@GameInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_GameInput_Movement;
        public InputAction @CameraLook => m_Wrapper.m_GameInput_CameraLook;
        public InputAction @Run => m_Wrapper.m_GameInput_Run;
        public InputAction @LAttack => m_Wrapper.m_GameInput_LAttack;
        public InputAction @RAttack => m_Wrapper.m_GameInput_RAttack;
        public InputAction @Climb => m_Wrapper.m_GameInput_Climb;
        public InputAction @Grab => m_Wrapper.m_GameInput_Grab;
        public InputAction @TakeOut => m_Wrapper.m_GameInput_TakeOut;
        public InputActionMap Get() { return m_Wrapper.m_GameInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameInputActions set) { return set.Get(); }
        public void SetCallbacks(IGameInputActions instance)
        {
            if (m_Wrapper.m_GameInputActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMovement;
                @CameraLook.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCameraLook;
                @CameraLook.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCameraLook;
                @CameraLook.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCameraLook;
                @Run.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRun;
                @LAttack.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLAttack;
                @LAttack.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLAttack;
                @LAttack.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLAttack;
                @RAttack.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRAttack;
                @RAttack.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRAttack;
                @RAttack.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRAttack;
                @Climb.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnClimb;
                @Climb.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnClimb;
                @Climb.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnClimb;
                @Grab.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnGrab;
                @Grab.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnGrab;
                @Grab.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnGrab;
                @TakeOut.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnTakeOut;
                @TakeOut.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnTakeOut;
                @TakeOut.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnTakeOut;
            }
            m_Wrapper.m_GameInputActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @CameraLook.started += instance.OnCameraLook;
                @CameraLook.performed += instance.OnCameraLook;
                @CameraLook.canceled += instance.OnCameraLook;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @LAttack.started += instance.OnLAttack;
                @LAttack.performed += instance.OnLAttack;
                @LAttack.canceled += instance.OnLAttack;
                @RAttack.started += instance.OnRAttack;
                @RAttack.performed += instance.OnRAttack;
                @RAttack.canceled += instance.OnRAttack;
                @Climb.started += instance.OnClimb;
                @Climb.performed += instance.OnClimb;
                @Climb.canceled += instance.OnClimb;
                @Grab.started += instance.OnGrab;
                @Grab.performed += instance.OnGrab;
                @Grab.canceled += instance.OnGrab;
                @TakeOut.started += instance.OnTakeOut;
                @TakeOut.performed += instance.OnTakeOut;
                @TakeOut.canceled += instance.OnTakeOut;
            }
        }
    }
    public GameInputActions @GameInput => new GameInputActions(this);
    public interface IGameInputActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCameraLook(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnLAttack(InputAction.CallbackContext context);
        void OnRAttack(InputAction.CallbackContext context);
        void OnClimb(InputAction.CallbackContext context);
        void OnGrab(InputAction.CallbackContext context);
        void OnTakeOut(InputAction.CallbackContext context);
    }
}
